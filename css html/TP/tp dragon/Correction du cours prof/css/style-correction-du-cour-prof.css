/** importation de police de caractère depuis une ressource externe **/
@import url('https://fonts.googleapis.com/css2?family=Gupter:wght@400;500;700&family=Nunito:ital,wght@0,200..1000;1,200..1000&display=swap');

/** reset de style pour enlever les valeurs par défaut des balises. permet de ne pas avoir à les changer une 
    par une. (à n'utiliser que sur les petites pages) **/
*{/* balise * = all : toutes les balises*/
    margin: 0;
    padding: 0;
    outline: none;
    box-sizing: border-box;/* permet de forcer le navigateur a calculer les padding et les border
                                dans la forme de la boite (tout ce qui est en display block ou flex est une boite)*/
}
html{
    font-size: 62.5%;
}
html,body{/** on oblige le document a avoir une taille en hauteur et en largeur */
    width: 100%;
    height: 100%;
    position: relative;
}
body{
    font-size: 1.6rem;/* 16px resolution par défaut de caractere navigateur */
    line-height: 1.333; /** la valeur est un proportion en rapport avec la hauteur de caractère
                            ici un plus un tière de caractère pour la hauteur de ligne **/
    font-family:'Gupter', sans-serif;
    background: url('../img/bg_paper.png');
    /** background:#000 url('fichier') center center no-repeat fixed;  cette ligne permùet de concentrer en
    une seul tout les déclarations ci-dessous*/
    /* background-color: #000;
    background-image: url('fichier');
    background-position: center center;
    background-repeat: no-repeat;
    background-attachment: fixed;*/
}
a{
    text-decoration: none;
}
ol,ul{
    list-style: none;
}
/** style global **/
button{
    cursor: pointer;
}
h1,h2,h3{
    font-family:'Nunito', sans-serif;
}
input,textarea,button,select{
    font-family: 'Gupter', sans-serif;
    font-size: 1.6rem;
}

main{
    height: 100%;
    width: 100%;
}
.page{
    height: 100%;
    border: 1px solid #f00;/* propriété de bordure, val1 = taille, val2 = style de la bordure, val3 color */
    display: flex;
}
/** first-child - last-child, permet de selectionner le premier ou dernier element d'un enssemble (ici première page)*/
.page:first-child{
   /*background:#080808 url('../img/bg_frame1.jpg') right top no-repeat;*/
    background-image: url('../assets/paysage.jpg');
    background-position: right top;
    background-repeat: no-repeat;
    background-color: #080808;
    background-size: auto 80%;/** dimention : x (horizontal), y (vertical) sinon des propriété existe tel que cover */
}
.page:first-child,
.page:nth-child(3){
    color: #fff;
}
.page:nth-child(3){
    background:#000 url('../assets/dragon-noir.jpg') center center no-repeat;
    background-size: cover;
}
/** texte pour les sections .page **/
.page h2:not(.inter-page h2){/** la pseudo class ":not" = selectionne tout les h2 a l'exeption
                                de ceux qui sont dans les element de class "inter-page"*/
    font-size: 8.5rem;
    line-height: 1.1;
}
.page{
    font-size: 2rem;
}
.page h3{
    font-size: 4rem;
    line-height: 1.1;
}
.btn-content{
    display: flex;
}
.page article a{
    background-color: #fff;
    color: #080808;
    display: block;
    width: 200px;
    height: 50px;
    text-align: center;
    line-height: 50px;
    font-size: 2rem;
}

.page article{
    width: 50%;
    height: 100%;
    padding:7% 10%;/* padding (rembourage) est une marge interne a l'element, à la différence de margin qui est un marge
                        externe 
                        padding: [top/bottom] - [left/right]
                        padding: [top] - [right] - [bottom] -[left]  */
    display: flex;  
    flex-direction: column;/* gestion du flux des elements en colonne donc de haut en bas (display flex donne par défaut
                        un flux en ligne (row))*/
    justify-content:space-between; /*  justify-content = repartition du contenu (flux) de la boite. ici espace equivalent entre tous*/
}
/** gestion des inter-pages **/
.inter-page{
    height: 60%;
    justify-content: space-between;
    align-items: center;
    position: relative;
}
.inter-page:nth-child(2) picture{
    width: 20%;
    position: absolute;/** la section etant en position relative
                        l'image va donc faire 20% de la taille de la section (son parnet direct grace 
                        à 'relativ' et etre placé a 41% a gauche du début de la section */
    left: 41%;
    bottom: 6%;
    z-index: 1; /* le z-index permet d'avoir un effet de calque: plus l'index est élevé plus 
                    l'objet est  au dessus des autre */
    transform: rotateZ(-1.5deg);
}
.inter-page:nth-child(2) picture img{
    width: 100%;
    position: relative;
    z-index: 2;
}
.picture-border{
    position: absolute;
    width: 100%;
    height: 100%;
    border: 1px solid #fff;
    top:15px;
    right:15px;
    z-index: 3;
}
.picture-bg{/** utilisation de la position absolut pour placer la boite deriere
                l'image grace au z-index, et décaler en négatif top et droite.
                sans gener l'image et la bordure */
    position: absolute;
    width: 100%;
    height: 100%;
    top:-15px;
    right:-15px;
    z-index: 1;
    background-color: #fff;
    opacity: 0.5;
}
.inter-page article:last-child{
    text-align: right;
}
.inter-page article:last-child .btn-content{
    justify-content: end;
}
.page:nth-child(2){
    background-color:rgba(95, 148, 136,0.5);
}
.inter-page:nth-child(2) article a{
    background-color: #152020;
    color: #517a62;
}









/* .test{
    width: 300px;
    height: 300px;
    border: 1px solid #000;
    margin-left: 100px;
    position: relative;
    overflow: hidden;
}
.test div{
    opacity: 0.5;
    background-color: #000;
    position: absolute;
    top:0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: all 400ms ease;
    color: #fff;
    text-align: center;
    line-height: 200px;
    font-size: 8rem;
    z-index: 3;
}
.test:hover div{
    opacity: 0;
}

.test img{
    position: absolute;
    width: 100%;
    top: 50%;
    left: 50%;
    opacity: 0.5;
    transition: all 400ms ease;
    transform: translate(-50%,-50%);
}
.test:hover img{
    width: 120%;
    opacity: 1;
} */




















































/*div.btn-content{
    background-color: #f00 !important;
}
    !! attention la valeur [!important] permet de donner la priorité absolu sur un style css.


/* id = 100, class = 50, balise = 20 
    valeur en "poid" d'un style css (priorité sur un autre)
*/